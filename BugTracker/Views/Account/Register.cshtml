@model BugTracker.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
}




    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @*<h4>Create a new account.</h4>
            <hr />*@    
    

    <div class='wrapper' style="margin-top:1%; width:35%">
        <div class='row'>
            <div class='col-lg-12'>
                <div class='brand text-center'>
                    <div class='logo-icon'>
                        <h1>
                            <i class='icon-bug'></i>
                            Crusher
                        </h1>
                    </div>
                </div>
            </div>
        </div>


        <div class="row">

                <div class='panel-heading'>
                    <i class='icon-edit icon-large'></i>
                    Registration Form
                </div>
                <form>
                    <fieldset class='text-center'>
                        <div class="form-group col-md-5" style="text-align:center">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = "First Name", style = "background-color:rgb(255, 211, 211)" } })
                            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
                        </div>
                        <div class="row"></div>
                        <div class="form-group col-md-5">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Last Name", style = "background-color:rgb(255, 211, 211)" } })
                            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
                        </div>
                        <div class="row"></div>
                        <div class="form-group col-md-10">
                            @Html.EditorFor(model => model.Adress, new { htmlAttributes = new { @class = "form-control", placeholder = "Adress" } })
                            @Html.ValidationMessageFor(m => m.Adress, "", new { @class = "text-danger" })
                        </div>
                        <div class="row"></div>
                        <div class="form-group col-md-5">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "City" } })
                            @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
                        </div>
                        <div class="row"></div>
                        <div class="form-group col-md-5">
                            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", placeholder = "State" } })
                            @Html.ValidationMessageFor(m => m.State, "", new { @class = "text-danger" })
                        </div>
                        <div class="row"></div>
                        <div class="form-group col-md-4">
                            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", placeholder = "Zip" } })
                            @Html.ValidationMessageFor(m => m.Zip, "", new { @class = "text-danger" })
                        </div>
                        <div class="row"></div>
                        <div class="form-group col-md-7">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email", style = "background-color:rgb(255, 211, 211)" } })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="row"></div>
                        <div class="form-group col-md-7">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Password", style = "background-color:rgb(255, 211, 211)" } })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="row"></div>
                        <div class="form-group col-md-7">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", placeholder = "ConfirmPassword", style = "background-color:rgb(255, 211, 211)" } })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                        <div class="row"></div>
                        <div class="form-group col-md-12" style="text-align:right">
                            <input type="submit" class="btn btn-default" value="Register" />
                        </div>
                    </fieldset>
                </form>
        </div>
    </div>






            @*<div class="form-group">
                @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Adress, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Adress, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.City, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.State, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.State, new { @class = "form-control", @maxlength = 2 })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Zip, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Zip, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" class="btn btn-default" value="Register" />
                </div>
            </div>*@
    }



        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
